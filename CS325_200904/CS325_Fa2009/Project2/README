You can create this tree:
        5
    3       8
   2 4     7 9
  1       6

using the following code:
    BST<int> tree;
    tree.insert(5);
    tree.insert(3);
    tree.insert(2);
    tree.insert(1);
    tree.insert(4);
    tree.insert(8);
    tree.insert(7);
    tree.insert(6);
    tree.insert(9);

The traversals of this tree are:
LevelOrder
5 3 8 2 4 7 9 1 6 
PreOrder
5 3 2 1 4 8 7 6 9 
PostOrder
1 2 4 3 6 7 9 8 5 
InOrder
1 2 3 4 5 6 7 8 9 


Your assignment.  Implement LevelOrder and PreOrder iterators as defined on the
course website.  Then, for 10 points each extra credit, you may also implement
PostOrder and InOrder iterators.

The iterators must be named the following:
    BST_LevelOrder_Iterator
    BST_PreOrder_Iterator
    BST_PostOrder_Iterator
    BST_InOrder_Iterator
and must inherrit from class Iterator.  Their constructors must take a BST by
reference. e.g.:
    BST_LevelOrder_Iterator(BST<T> &tree) {
        ...
    }

You must put the definition for all of these classes in the file
BSTIterator.hpp.

Your Main.cpp must demonstrate that your iterators work.  I'll leave that up to
you.  Do NOT (note that says do NOT) use any cin statements in your program.
Doing so will cost you 5 points.
