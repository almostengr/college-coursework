<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBwgHBgkIBwgKCgkLDRYPDQwMDRsUFRAWIB0iIiAdHx8k
        KDQsJCYxJx8fLT0tMTU3Ojo6Iys/RD84QzQ5Ojf/2wBDAQoKCg0MDRoPDxo3JR8lNzc3Nzc3Nzc3Nzc3
        Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzf/wAARCABiAIwDASIAAhEBAxEB/8QA
        GwABAAIDAQEAAAAAAAAAAAAAAAMEAQIFBgf/xAA7EAACAQMBBAUHCgcAAAAAAAAAAQIDBBEFEiExURNB
        YZGxBjJCUnFygSIlM0NiY3OhwdEUIyQ0gpLh/8QAFwEBAQEBAAAAAAAAAAAAAAAAAAEDAv/EABgRAQEB
        AQEAAAAAAAAAAAAAAAARARIx/9oADAMBAAIRAxEAPwD7iAAAAAAAAAAAAAAAAAAAAAAAAaVKkaeNrO94
        RuQ3SUqWHvWSbswbdMvVkOlXqyKEbjoZqFd/Ie6M31dj/ctZM+9WJemXqy7h00eUu4iyYyO9Im6aPKXc
        Omjyl3EOQ5KKcpNJJZbfBId6RN0seUv9SC71G0s1H+Jq7DlnZWy23ji8Lfhdb6jiVddqX03R0NRnDhK9
        ms017i9N9u6Pa+AuLKFtpV9Vcp1bipRfSV6jzOftfLsWEupF70j0lOcakIzg8xkk0+w2IbLdZ0F93HwJ
        jRAAAAAAAAAjuPon2EhFc/QT7Fkm+CjVjGpFxksplalXlZtU6uZUOqXFw/54EvSGtTE1hmLpdUk0mmmn
        vTXWMnHp152NTZSc6Le+K4x7V+xydd8oNQlWja6VSdvSlunfVY5cXyjF8H9qW7sEHc1fXLPSdmFZyq3V
        RZpWtFbVSfbjqX2nhHDnSv8AXZqWrNQts5jY0nmn/m/TftxHs6zGk6TSt3Ko9qpWqPaqVqknKc3zbe9n
        fo01FLcUZtLeNOKSWEhrG7R7z8JlmOEVNcl8z3f4bIOxabrWj7kfAlI7fdb0vcXgSG7kAAAAAAAAI7n+
        3q+4/Ay5pFS8vY0qU/kylue5AcRXceOTZXG3weFzPJ1Lm+tZYurK4jjrUNpflk2pa7Sb2XUSlybw+4xj
        qvWqcMYIpU6bzlJp8U1xOJT1WD9ItQ1CL9IC/CLtd8Mzo9ceLh7OaL1KtGcVKLTT4NHJhex5mHV2JOpQ
        a375Q6pdq5MDuKoU9cqfNF3+H+pXo3saiynvW5p8UQa1cJ6Rdb/Q/VEHsKO6jT91eBucKh5R2+xFTpyj
        hIt09bsp/WbPtRvHLpAr0762qebWg/iTRqQl5sk/YwNgAAAAEcoZIKlBS4otmMARyoUqkUpwi93Io3eg
        6fdJqrbwl7YpnTAHk7nyG0+eXQUqL+7m4/ktxy7jyLvaOXa3s2upVIqXhg+gAkHzCrpGu2v1VOsl6snF
        9z/cryu763f9RZXEMdahtL8sn1ZxT4pMina0KnnU4v4E5wr5atXpTmmqihVXPc32NDU9VU9LuIyeJbHD
        Paj6NcaHp1wsVraElyaTKT8jtCby7GHPGWl3cCcrXk6U3NLCZYhTqS4QfcevoaTa0klGksItwtKMeFNd
        xpXMeMhaXMvNhItUbLUF5m2vievjTguEUbJJdQpHnqFvqscfzX8Tp20b6OOlkmXwRWI5x8oyAAAAAAAA
        AAAAAAAa4M4MgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//2Q==
</value>
  </data>
</root>